{
    "swagger": "2.0",
    "info": {
        "title": "ERP TRAN API",
        "description": "",
        "version": "1.0.0"
    },
    "host": "",
    "schemes": [
        "http",
        "https"
    ],
    "basePath": "/api/v1",
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "tags": [
        {
            "name": "Authentication",
            "description": "Operations about Authentication"
        },
        {
            "name": "User",
            "description": "Operations about User"
        },
        {
            "name": "City",
            "description": "Operations about City"
        },
        {
            "name": "Store",
            "description": "Operations about Store"
        },
        {
            "name": "Role",
            "description": "Operations about Role"
        },
        {
            "name": "Permissions",
            "description": "Operations about Permissions"
        },
        {
            "name": "Shifts",
            "description": "Operations about Shifts"
        },
        {
            "name": "Schedules",
            "description": "Operations about Schedules"
        },
        {
            "name": "Timekeeping",
            "description": "Operations about Timekeeping"
        },
        {
            "name": "Contact Infomation",
            "description": "Operations about Contact Infomation"
        },
        {
            "name": "User Educations",
            "description": "Operations about User Educations"
        },
        {
            "name": "User Timekeeping Configs",
            "description": "Operations about User Timekeeping Configs"
        },
        {
            "name": "User Work History",
            "description": "Operations about User Work History"
        },
        {
            "name": "Kiosk",
            "description": "Operations about Kiosk"
        },
        {
            "name": "Fingerprint Timekeepers",
            "description": "Operations about Fingerprint Timekeepers"
        },
        {
            "name": "Decision",
            "description": "Operations about Decisions"
        },
        {
            "name": "Additional Time",
            "description": "Operations about Additional Time"
        },
        {
            "name": "Division",
            "description": "Operations about Division"
        },
        {
            "name": "Position",
            "description": "Operations about Position"
        },
        {
            "name": "Work Form",
            "description": "Operations about Work Form"
        },
        {
            "name": "Rank Position Information",
            "description": "Operations about Rank Position Information"
        },
        {
            "name": "Absent Type",
            "description": "Operations about Absent Type"
        },
        {
            "name": "Absent Reason",
            "description": "Operations about Absent Reason"
        },
        {
            "name": "Absent",
            "description": "Operations about Absent"
        },
        {
            "name": "Health Infomation",
            "description": "Operations about Health Infomation"
        },
        {
            "name": "Bank Infomation",
            "description": "Operations about Bank Infomation"
        },
        {
            "name": "Labour Contract",
            "description": "Operations about Labour Contract"
        },
        {
            "name": "Faults",
            "description": "Operations about Faults"
        },
        {
            "name": "Fault Contents",
            "description": "Operations about Fault Contents"
        },
        {
            "name": "Fault Types",
            "description": "Operations about Fault Types"
        },
        {
            "name": "Insurrance",
            "description": "Operations about Insurrance"
        },
        {
            "name": "Subtraction Time",
            "description": "Operations about Subtraction Time"
        },
        {
            "name": "Suggest Category",
            "description": "Operations about Suggest Category"
        },
        {
            "name": "Suggest Reason",
            "description": "Operations about Suggest Reason"
        },
        {
            "name": "Suggest",
            "description": "Operations about Suggest"
        },
        {
            "name": "Sabbatical Leaves",
            "description": "Operations about Sabbatical Leaves"
        }
    ],
    "paths": {
        "/oauth/token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login",
                "description": "Login",
                "operationId": "AuthLogin",
                "parameters": [
                    {
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadLoginRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login Success",
                        "schema": {
                            "$ref": "#/definitions/TokenPassport"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorPassport"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register",
                "description": "Register",
                "operationId": "AuthRegister",
                "parameters": [
                    {
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadRegisterRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Register successfully",
                        "schema": {
                            "$ref": "#/definitions/TokenPassport"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorPassport"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout",
                "description": "Logout",
                "operationId": "AuthLogout",
                "responses": {
                    "200": {
                        "description": "Login Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/me": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "User profile",
                "description": "Get information of current user",
                "operationId": "MeProfile",
                "parameters": [
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get profile Success",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/password/forgot/request": {
            "post": {
                "summary": "Send request forgot password",
                "description": "",
                "operationId": "PasswordForgotRequest",
                "tags": [
                    "Authentication"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadPasswordForgotRequestRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/password/forgot/reset": {
            "post": {
                "summary": "Reset password",
                "description": "",
                "operationId": "PasswordForgotReset",
                "tags": [
                    "Authentication"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadPasswordForgotResetRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/password/change": {
            "post": {
                "summary": "Change password",
                "description": "",
                "operationId": "PasswordChange",
                "tags": [
                    "Authentication"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadPasswordChangeRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "List Users",
                "description": "Get list users",
                "operationId": "UserList",
                "parameters": [
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "$ref": "#/parameters/searchFields"
                    },
                    {
                        "$ref": "#/parameters/filter"
                    },
                    {
                        "$ref": "#/parameters/orderBy"
                    },
                    {
                        "$ref": "#/parameters/sortedBy"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "post": {
                "summary": "Create User",
                "description": "",
                "operationId": "UserCreate",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadCreateUserRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "User profile",
                "description": "Get information of a specified user",
                "operationId": "UserDetail",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get profile Success",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "patch": {
                "summary": "Update User",
                "description": "",
                "operationId": "Update",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadUpdateUserRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete User",
                "description": "",
                "operationId": "Delete",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/users/roles/{id}": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Update User role",
                "description": "Get information of a specified user",
                "operationId": "UserDetail",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get profile Success",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "user/insurrances": {
            "get": {
                "summary": "List Insurrance",
                "description": "",
                "tags": [
                    "Insurrance"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "$ref": "#/parameters/searchFields"
                    },
                    {
                        "$ref": "#/parameters/filter"
                    },
                    {
                        "$ref": "#/parameters/orderBy"
                    },
                    {
                        "$ref": "#/parameters/sortedBy"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/Insurrance"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Insurrance",
                "description": "",
                "tags": [
                    "Insurrance"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateInsurrance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "user/labours-contracts": {
            "get": {
                "summary": "List Labour Contract",
                "description": "",
                "tags": [
                    "Labour Contract"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "$ref": "#/parameters/searchFields"
                    },
                    {
                        "$ref": "#/parameters/filter"
                    },
                    {
                        "$ref": "#/parameters/orderBy"
                    },
                    {
                        "$ref": "#/parameters/sortedBy"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/LabourContract"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Labour Contract",
                "description": "",
                "tags": [
                    "Labour Contract"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateLabourContract"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/suggests": {
            "get": {
                "summary": "List Suggest",
                "description": "",
                "tags": [
                    "Suggest"
                ],
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "item search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "searchFields",
                        "in": "query",
                        "description": "item searchFields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/Suggest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Suggest",
                "description": "",
                "tags": [
                    "Suggest"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateSuggest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/suggests/{id}": {
            "put": {
                "summary": "Update Suggest",
                "description": "",
                "tags": [
                    "Suggest"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateSuggest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "get": {
                "summary": "Detail Suggest Reason",
                "description": "Detail item",
                "tags": [
                    "Suggest"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detail item",
                        "schema": {
                            "$ref": "#/definitions/SuggestDetail"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorNotFound"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Suggest",
                "description": "",
                "operationId": "Delete",
                "tags": [
                    "Suggest"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/suggest-reasons": {
            "get": {
                "summary": "List Suggest Reason",
                "description": "",
                "tags": [
                    "Suggest Reason"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/SuggestReason"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Suggest Reason",
                "description": "",
                "tags": [
                    "Suggest Reason"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateSuggestReason"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/suggest-categories": {
            "get": {
                "summary": "List Suggest Category",
                "description": "",
                "tags": [
                    "Suggest Category"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/SuggestCategory"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Suggest Category",
                "description": "",
                "tags": [
                    "Suggest Category"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateSuggestCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/citys": {
            "get": {
                "summary": "List City",
                "description": "",
                "tags": [
                    "City"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/City"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create City",
                "description": "",
                "tags": [
                    "City"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateCity"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "user/insurrances/{id}": {
            "put": {
                "summary": "Update Insurrance",
                "description": "",
                "tags": [
                    "Insurrance"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateInsurrance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "get": {
                "summary": "Detail Insurrance",
                "description": "Detail item",
                "tags": [
                    "Insurrance"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detail item",
                        "schema": {
                            "$ref": "#/definitions/InsurranceDetail"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorNotFound"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Insurrance",
                "description": "",
                "operationId": "",
                "tags": [
                    "Insurrance"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "user/labours-contracts/{id}": {
            "put": {
                "summary": "Update Labour Contract",
                "description": "",
                "tags": [
                    "Labour Contract"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateLabourContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "get": {
                "summary": "Detail Labour Contract",
                "description": "Detail item",
                "tags": [
                    "Labour Contract"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detail item",
                        "schema": {
                            "$ref": "#/definitions/LabourContractDetail"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorNotFound"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Labour Contract",
                "description": "",
                "operationId": "",
                "tags": [
                    "Labour Contract"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/suggest-reasons/{id}": {
            "put": {
                "summary": "Update Suggest Reason",
                "description": "",
                "tags": [
                    "Suggest Reason"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateSuggestReason"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "get": {
                "summary": "Detail Suggest Reason",
                "description": "Detail item",
                "tags": [
                    "Suggest Reason"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detail item",
                        "schema": {
                            "$ref": "#/definitions/SuggestReasonDetail"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorNotFound"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Suggest Reason",
                "description": "",
                "operationId": "Delete",
                "tags": [
                    "Suggest Reason"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/suggest-categories/{id}": {
            "put": {
                "summary": "Update Suggest Category",
                "description": "",
                "tags": [
                    "Suggest Category"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateSuggestCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "get": {
                "summary": "Detail Suggest Category",
                "description": "Detail item",
                "tags": [
                    "Suggest Category"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detail item",
                        "schema": {
                            "$ref": "#/definitions/SuggestCategoryDetail"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorNotFound"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Suggest Category",
                "description": "",
                "operationId": "Delete",
                "tags": [
                    "Suggest Category"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/citys/{id}": {
            "put": {
                "summary": "Update City",
                "description": "",
                "tags": [
                    "City"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateCity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "get": {
                "summary": "Detail City",
                "description": "Detail item",
                "tags": [
                    "City"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detail item",
                        "schema": {
                            "$ref": "#/definitions/CityDetail"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorNotFound"
                        }
                    }
                }
            }
        },
        "/stores": {
            "get": {
                "summary": "List Store",
                "description": "",
                "tags": [
                    "Store"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get List Success",
                        "schema": {
                            "$ref": "#/definitions/Store"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Store",
                "description": "",
                "tags": [
                    "Store"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateStore"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/stores/{id}": {
            "put": {
                "summary": "Update Store",
                "description": "",
                "tags": [
                    "Store"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateStore"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "get": {
                "summary": "Detail Store",
                "description": "Detail item",
                "tags": [
                    "Store"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detail item",
                        "schema": {
                            "$ref": "#/definitions/StoreDetail"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorNotFound"
                        }
                    }
                }
            }
        },
        "/user-by-store/{id}": {
            "get": {
                "summary": "Get user by Store",
                "description": "Detail item",
                "tags": [
                    "Store"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detail item",
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorNotFound"
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "summary": "List Roles",
                "description": "",
                "tags": [
                    "Role"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Role",
                "description": "",
                "tags": [
                    "Role"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateRole"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/roles/{id}": {
            "put": {
                "summary": "Update Role",
                "description": "",
                "tags": [
                    "Role"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateStore"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "get": {
                "summary": "Detail Role",
                "description": "Detail item",
                "tags": [
                    "Role"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detail item",
                        "schema": {
                            "$ref": "#/definitions/RoleDetail"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorNotFound"
                        }
                    }
                }
            }
        },
        "/permissions": {
            "get": {
                "summary": "List Permission",
                "description": "",
                "tags": [
                    "Permissions"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get List Success",
                        "schema": {
                            "$ref": "#/definitions/Permission"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Permission",
                "description": "",
                "tags": [
                    "Permissions"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreatePermission"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/permissions/{id}": {
            "put": {
                "summary": "Update Permission",
                "description": "",
                "tags": [
                    "Permissions"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreatePermission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "get": {
                "summary": "Detail Permission",
                "description": "Detail item",
                "tags": [
                    "Permissions"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detail item",
                        "schema": {
                            "$ref": "#/definitions/PermissionDetail"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorNotFound"
                        }
                    }
                }
            }
        },
        "/shifts": {
            "get": {
                "summary": "List Shift",
                "description": "",
                "tags": [
                    "Shifts"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/Shift"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Shift",
                "description": "",
                "tags": [
                    "Shifts"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateShift"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/shifts/{id}": {
            "put": {
                "summary": "Update Shift",
                "description": "",
                "tags": [
                    "Shifts"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateShift"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "get": {
                "summary": "Detail Shift",
                "description": "Detail item",
                "tags": [
                    "Shifts"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detail item",
                        "schema": {
                            "$ref": "#/definitions/ShiftDetail"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorNotFound"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Shift",
                "description": "",
                "operationId": "Delete",
                "tags": [
                    "Shifts"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeleteShift"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/active-status-shift/{id}": {
            "put": {
                "summary": "Active status shift",
                "description": "",
                "tags": [
                    "Shifts"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ActiveShift"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/schedule-details/users": {
            "get": {
                "summary": "List Schedule Detail User",
                "description": "",
                "tags": [
                    "Schedule Detail"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "role_id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "schedule_id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "division_id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "scheduleDetail",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List Success",
                        "schema": {
                            "$ref": "#/definitions/ScheduleDetailUser"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/kiosk/schedule-details/users": {
            "get": {
                "summary": "List Schedule Detail User",
                "description": "",
                "tags": [
                    "Schedule Detail"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "role_id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "scheduleDetail",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List Success",
                        "schema": {
                            "$ref": "#/definitions/ScheduleDetailUser"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/schedules/{id}/approval": {
            "put": {
                "summary": "Update Schedule",
                "description": "",
                "tags": [
                    "Schedules"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ScheduleApprovel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/Schedule"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/schedules": {
            "get": {
                "summary": "List Schedule",
                "description": "",
                "tags": [
                    "Schedules"
                ],
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "shift_id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "array",
                        "items": {
                            "properties": {
                                "detail": {
                                    "type": "string"
                                },
                                "title": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "scheduleDetail",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/Schedule"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/schedules/{id}": {
            "get": {
                "summary": "List Schedule",
                "description": "",
                "tags": [
                    "Schedules"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "scheduleDetail",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/ScheduleDetail"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Schedules",
                "description": "",
                "tags": [
                    "Schedules"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateSchedule"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Update Schedule Success",
                        "schema": {
                            "$ref": "#/definitions/Schedule"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/schedules/schedule-details/users": {
            "put": {
                "summary": "Create Schedules Detail",
                "description": "",
                "tags": [
                    "Schedules"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AddScheduleDetailUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/Schedule"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/schedule-details/{id}/user/{user_id}": {
            "delete": {
                "summary": "Delete User From Schedules Detail",
                "description": "",
                "tags": [
                    "Schedules"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/Schedule"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/timekeeping": {
            "get": {
                "tags": [
                    "Timekeeping"
                ],
                "summary": "List Timekeeping",
                "description": "Get List Timekeeping",
                "operationId": "TimekeepingList",
                "parameters": [
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/Timekeeping"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "post": {
                "summary": "Create Timekeeping",
                "description": "",
                "operationId": "UserCreate",
                "tags": [
                    "Timekeeping"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimekeepingCreateRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/timekeeping/{id}": {
            "get": {
                "tags": [
                    "Timekeeping"
                ],
                "summary": "Timekeeping Information",
                "description": "Get information of a specified Timekeeping",
                "operationId": "UserDetail",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Timekeeping Success",
                        "schema": {
                            "$ref": "#/definitions/Timekeeping"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "patch": {
                "summary": "Update Timekeeping",
                "description": "",
                "operationId": "Update",
                "tags": [
                    "Timekeeping"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimekeepingAttributesRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete Timekeeping",
                "description": "",
                "operationId": "Delete",
                "tags": [
                    "Timekeeping"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/user/bank-informations": {
            "get": {
                "tags": [
                    "Bank Infomation"
                ],
                "summary": "Get Contact Infomation",
                "description": "Contact Infomation",
                "operationId": "",
                "parameters": [
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "$ref": "#/parameters/searchFields"
                    },
                    {
                        "$ref": "#/parameters/filter"
                    },
                    {
                        "$ref": "#/parameters/orderBy"
                    },
                    {
                        "$ref": "#/parameters/sortedBy"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/BankInformation"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "post": {
                "summary": "Update Bank Infomation",
                "description": "",
                "operationId": "",
                "tags": [
                    "Bank Infomation"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BankInformationCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/user/health-informations": {
            "get": {
                "tags": [
                    "Health Infomation"
                ],
                "summary": "Get Contact Infomation",
                "description": "Contact Infomation",
                "operationId": "",
                "parameters": [
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "$ref": "#/parameters/searchFields"
                    },
                    {
                        "$ref": "#/parameters/filter"
                    },
                    {
                        "$ref": "#/parameters/orderBy"
                    },
                    {
                        "$ref": "#/parameters/sortedBy"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/HealthInformation"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "post": {
                "summary": "Update Health Infomation",
                "description": "",
                "operationId": "",
                "tags": [
                    "Health Infomation"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HealthInformationCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/user/contact-informations": {
            "get": {
                "tags": [
                    "Contact Infomation"
                ],
                "summary": "Get Contact Infomation",
                "description": "Contact Infomation",
                "operationId": "",
                "parameters": [
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "$ref": "#/parameters/searchFields"
                    },
                    {
                        "$ref": "#/parameters/filter"
                    },
                    {
                        "$ref": "#/parameters/orderBy"
                    },
                    {
                        "$ref": "#/parameters/sortedBy"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/ContactInformation"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "post": {
                "summary": "Update Contact Infomation",
                "description": "",
                "operationId": "",
                "tags": [
                    "Contact Infomation"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ContactInformationCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/user/educations": {
            "get": {
                "tags": [
                    "User Educations"
                ],
                "summary": "Get User Educations",
                "description": "User Educations",
                "operationId": "UserProfiles",
                "parameters": [
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "$ref": "#/parameters/searchFields"
                    },
                    {
                        "$ref": "#/parameters/filter"
                    },
                    {
                        "$ref": "#/parameters/orderBy"
                    },
                    {
                        "$ref": "#/parameters/sortedBy"
                    },
                    {
                        "$ref": "#/parameters/include"
                    },
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/typeEducations"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/Educations"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "post": {
                "summary": "Update User Educations",
                "description": "",
                "operationId": "UserEducations",
                "tags": [
                    "User Educations"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EducationsUpdateRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/user/educations/{id}": {
            "get": {
                "tags": [
                    "User Educations"
                ],
                "summary": "Get User Educations",
                "description": "User Educations",
                "operationId": "UserEducations",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/Educations"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete User Educations",
                "description": "",
                "operationId": "UserEducations",
                "tags": [
                    "User Educations"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/user/timekeeping-configs": {
            "get": {
                "tags": [
                    "User Timekeeping Configs"
                ],
                "summary": "Get User Timekeeping Configs",
                "description": "",
                "operationId": "",
                "parameters": [
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "$ref": "#/parameters/searchFields"
                    },
                    {
                        "$ref": "#/parameters/filter"
                    },
                    {
                        "$ref": "#/parameters/orderBy"
                    },
                    {
                        "$ref": "#/parameters/sortedBy"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/TimekeepingConfig"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "post": {
                "summary": "Update User Timekeeping Configs",
                "description": "",
                "operationId": "UserTimekeeping Configs",
                "tags": [
                    "User Timekeeping Configs"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimekeepingConfigUpdateRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/user/work-historys": {
            "get": {
                "tags": [
                    "User Work History"
                ],
                "summary": "Get User Work History",
                "description": "",
                "operationId": "",
                "parameters": [
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "$ref": "#/parameters/searchFields"
                    },
                    {
                        "$ref": "#/parameters/filter"
                    },
                    {
                        "$ref": "#/parameters/orderBy"
                    },
                    {
                        "$ref": "#/parameters/sortedBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/WorkHistory"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "post": {
                "summary": "Update User Work History",
                "description": "",
                "operationId": "",
                "tags": [
                    "User Work History"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkHistoryUpdateRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/kiosks": {
            "get": {
                "summary": "List Kiosk",
                "description": "",
                "tags": [
                    "Kiosk"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Kiosk",
                "description": "",
                "tags": [
                    "Kiosk"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/KioskUpdateRaw"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/kiosks/{id}": {
            "patch": {
                "summary": "Update Kiosk",
                "description": "",
                "tags": [
                    "Kiosk"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/KioskUpdateRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "get": {
                "summary": "Detail Kiosk",
                "description": "Detail item",
                "tags": [
                    "Kiosk"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detail item",
                        "schema": {
                            "$ref": "#/definitions/Kiosk"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorNotFound"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Kiosk",
                "description": "",
                "operationId": "Delete",
                "tags": [
                    "Kiosk"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/fingerprint-timekeepers": {
            "get": {
                "summary": "List Fingerprint Timekeepers",
                "description": "",
                "tags": [
                    "Fingerprint Timekeepers"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Fingerprint Timekeepers",
                "description": "",
                "tags": [
                    "Fingerprint Timekeepers"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FingerprintTimekeepers"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/fingerprint-timekeepers/{id}": {
            "patch": {
                "summary": "Update Fingerprint Timekeepers",
                "description": "",
                "tags": [
                    "Fingerprint Timekeepers"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FingerprintTimekeepersUpdateRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "get": {
                "summary": "Detail Fingerprint Timekeepers",
                "description": "Detail item",
                "tags": [
                    "Fingerprint Timekeepers"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detail item",
                        "schema": {
                            "$ref": "#/definitions/FingerprintTimekeepers"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorNotFound"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Fingerprint Timekeepers",
                "description": "",
                "operationId": "Delete",
                "tags": [
                    "Fingerprint Timekeepers"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/timekeeping-report": {
            "get": {
                "tags": [
                    "Timekeeping"
                ],
                "summary": "Timekeeping Report",
                "description": "Get information of a specified Timekeeping Report",
                "operationId": "TimekeepingReport",
                "parameters": [
                    {
                        "$ref": "#/parameters/start_date"
                    },
                    {
                        "$ref": "#/parameters/end_date"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/include"
                    },
                    {
                        "$ref": "#/parameters/store_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Timekeeping Success",
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/decisions": {
            "get": {
                "summary": "List Decision",
                "description": "",
                "tags": [
                    "Decision"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/Decision"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Decision",
                "description": "",
                "tags": [
                    "Decision"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateDecision"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/decisions/{id}": {
            "put": {
                "summary": "Update Decision",
                "description": "",
                "tags": [
                    "Decision"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateDecision"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "get": {
                "summary": "Detail Decision",
                "description": "Detail item",
                "tags": [
                    "Decision"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detail item",
                        "schema": {
                            "$ref": "#/definitions/DecisionDetail"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorNotFound"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Decision",
                "description": "",
                "operationId": "Delete",
                "tags": [
                    "Decision"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/divisions": {
            "get": {
                "summary": "List Division",
                "description": "",
                "tags": [
                    "Division"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/Division"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Decision",
                "description": "",
                "tags": [
                    "Division"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateDivision"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/divisions/{id}": {
            "put": {
                "summary": "Update Division",
                "description": "",
                "tags": [
                    "Division"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateDivision"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "get": {
                "summary": "Detail Division",
                "description": "Detail item",
                "tags": [
                    "Division"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detail item",
                        "schema": {
                            "$ref": "#/definitions/DivisionDetail"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorNotFound"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Division",
                "description": "",
                "operationId": "Delete",
                "tags": [
                    "Division"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/positions": {
            "get": {
                "summary": "List Position",
                "description": "",
                "tags": [
                    "Position"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/Position"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Position",
                "description": "",
                "tags": [
                    "Position"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreatePosition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/positions/{id}": {
            "put": {
                "summary": "Update Position",
                "description": "",
                "tags": [
                    "Position"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreatePosition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "get": {
                "summary": "Detail Position",
                "description": "Detail item",
                "tags": [
                    "Position"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detail item",
                        "schema": {
                            "$ref": "#/definitions/PositionDetail"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorNotFound"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Position",
                "description": "",
                "operationId": "Delete",
                "tags": [
                    "Position"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/work_forms": {
            "get": {
                "summary": "List Work Form",
                "description": "",
                "tags": [
                    "Work Form"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/WorkForm"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Work Form",
                "description": "",
                "tags": [
                    "Work Form"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateWorkForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/work_forms/{id}": {
            "put": {
                "summary": "Update Work Form",
                "description": "",
                "tags": [
                    "Work Form"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateWorkForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "get": {
                "summary": "Detail Work Form",
                "description": "Detail item",
                "tags": [
                    "Work Form"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detail item",
                        "schema": {
                            "$ref": "#/definitions/WorkFormDetail"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorNotFound"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Work Form",
                "description": "",
                "operationId": "Delete",
                "tags": [
                    "Work Form"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/rank_position_informations": {
            "get": {
                "summary": "List Rank Position Information",
                "description": "",
                "tags": [
                    "Rank Position Information"
                ],
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "item search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "searchFields",
                        "in": "query",
                        "description": "item searchFields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/RankPositionInformation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Rank Position Information",
                "description": "",
                "tags": [
                    "Rank Position Information"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateRankPositionInformation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/fault-types": {
            "get": {
                "summary": "Get List Fault Types",
                "description": "",
                "tags": [
                    "Fault Types"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get List Fault Types Success",
                        "schema": {
                            "$ref": "#/definitions/FaultTypes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Fault Types",
                "description": "",
                "tags": [
                    "Fault Types"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateFaultType"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Fault Type Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/fault-types/{id}": {
            "put": {
                "summary": "Update Fault Type",
                "description": "",
                "tags": [
                    "Fault Types"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateFaultType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/FaultType"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get Fault Type",
                "description": "",
                "tags": [
                    "Fault Types"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Fault Type Successfully",
                        "schema": {
                            "$ref": "#/definitions/FaultType"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Fault Type",
                "description": "",
                "operationId": "Delete",
                "tags": [
                    "Fault Types"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/fault-contents": {
            "get": {
                "summary": "Get List Fault Contents",
                "description": "",
                "tags": [
                    "Fault Contents"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get List Fault Contents Success",
                        "schema": {
                            "$ref": "#/definitions/FaultContents"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Fault Contents",
                "description": "",
                "tags": [
                    "Fault Contents"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateFaultContent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Fault Content Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/fault-contents/{id}": {
            "put": {
                "summary": "Update Fault Content",
                "description": "",
                "tags": [
                    "Fault Contents"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateFaultContent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/FaultContent"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get Fault Content",
                "description": "",
                "tags": [
                    "Fault Contents"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Fault Content Successfully",
                        "schema": {
                            "$ref": "#/definitions/FaultContent"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Fault Content",
                "description": "",
                "operationId": "Delete",
                "tags": [
                    "Fault Contents"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/faults": {
            "get": {
                "summary": "Get List Faults",
                "description": "",
                "tags": [
                    "Faults"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get List Faults Success",
                        "schema": {
                            "$ref": "#/definitions/Faults"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Fault",
                "description": "",
                "tags": [
                    "Faults"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateFault"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Fault Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "/faults/{id}": {
            "put": {
                "summary": "Update Fault",
                "description": "",
                "tags": [
                    "Faults"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateFault"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/Faults"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get Fault",
                "description": "",
                "tags": [
                    "Faults"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Fault Successfully",
                        "schema": {
                            "$ref": "#/definitions/Faults"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Fault",
                "description": "",
                "operationId": "Delete",
                "tags": [
                    "Faults"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/absent-types": {
            "get": {
                "summary": "Get Absent Type",
                "description": "",
                "tags": [
                    "Absent Type"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/AbsentType"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "post": {
                "summary": "Create Absent Type",
                "description": "",
                "tags": [
                    "Absent Type"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AbsentType"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/absent-types/{id}": {
            "get": {
                "summary": "Get Absent Type",
                "description": "",
                "tags": [
                    "Absent Type"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/AbsentType"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "patch": {
                "summary": "Update Absent Type",
                "description": "",
                "tags": [
                    "Absent Type"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AbsentType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/AbsentType"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete Absent Type",
                "description": "",
                "tags": [
                    "Absent Type"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/absent-reasons": {
            "get": {
                "summary": "Get Absent Reason",
                "description": "",
                "tags": [
                    "Absent Reason"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/AbsentReason"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "post": {
                "summary": "Create Absent Reason",
                "description": "",
                "tags": [
                    "Absent Reason"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AbsentReason"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/absent-reasons/{id}": {
            "get": {
                "summary": "Get Absent Reason",
                "description": "",
                "tags": [
                    "Absent Reason"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/AbsentReason"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "patch": {
                "summary": "Update Absent Reason",
                "description": "",
                "tags": [
                    "Absent Reason"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AbsentReason"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/AbsentType"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete Absent Reason",
                "description": "",
                "tags": [
                    "Absent Reason"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/absents": {
            "get": {
                "summary": "Get Absent",
                "description": "",
                "tags": [
                    "Absent"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/include"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "$ref": "#/parameters/searchFields"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/Absent"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "post": {
                "summary": "Create Absent",
                "description": "",
                "tags": [
                    "Absent"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Absent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/absents/{id}": {
            "get": {
                "summary": "Get Absent",
                "description": "",
                "tags": [
                    "Absent"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/include"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "$ref": "#/parameters/searchFields"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/Absent"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "patch": {
                "summary": "Update Absent",
                "description": "",
                "tags": [
                    "Absent"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Absent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/AbsentType"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete Absent",
                "description": "",
                "tags": [
                    "Absent"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/additional-times": {
            "get": {
                "tags": [
                    "Additional Time"
                ],
                "summary": "Get Additional Time",
                "description": "Additional Time",
                "parameters": [
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "",
                        "type": "string"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "",
                        "type": "string"
                    },
                    {
                        "name": "start_time",
                        "in": "query",
                        "description": "",
                        "type": "string"
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "description": "",
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "description": "Include relationship.",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Additional Time"
                ],
                "summary": "Post Additional Time",
                "description": "Additional Time",
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdditionalTimeCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/additional-times/{id}": {
            "get": {
                "tags": [
                    "Additional Time"
                ],
                "summary": "Get Residual Time",
                "description": "Residual Time",
                "operationId": "Residual Time",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/AdditionalTime"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "patch": {
                "summary": "Update Additional Time",
                "description": "",
                "tags": [
                    "Additional Time"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdditionalTimeUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/AdditionalTime"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Additional Time"
                ],
                "summary": "Delete Additional Time",
                "description": "Additional Time",
                "operationId": "Additional Time",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/subtraction-times": {
            "get": {
                "tags": [
                    "Subtraction Time"
                ],
                "summary": "Get Subtraction Time",
                "description": "Subtraction Time",
                "parameters": [
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "",
                        "type": "string"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "",
                        "type": "string"
                    },
                    {
                        "name": "start_time",
                        "in": "query",
                        "description": "",
                        "type": "string"
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "description": "",
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "description": "Include relationship. \n user.rankPositionInformation,owner.rankPositionInformation ",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "store_id",
                        "description": "Filter store_id",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "position_id",
                        "description": "Filter position_id",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Subtraction Time"
                ],
                "summary": "Post Subtraction Time",
                "description": "Subtraction Time",
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubtractionTimeCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/subtraction-times/{id}": {
            "get": {
                "tags": [
                    "Subtraction Time"
                ],
                "summary": "Get Subtraction Time",
                "description": "Subtraction Time",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "patch": {
                "summary": "Update Subtraction Time",
                "description": "",
                "tags": [
                    "Subtraction Time"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "item id",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubtractionTimeUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Subtraction Time"
                ],
                "summary": "Delete Subtraction Time",
                "description": "Subtraction Time",
                "operationId": "Subtraction Time",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "user/sabbatical-leaves": {
            "get": {
                "summary": "List Sabbatical Leaves",
                "description": "",
                "tags": [
                    "Sabbatical Leaves"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/search"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/SabbaticalLeave"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Sabbatical Leaves",
                "description": "",
                "tags": [
                    "Sabbatical Leaves"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SabbaticalLeave"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        },
        "user/sabbatical-leaves/{id}": {
            "get": {
                "summary": "List Sabbatical Leaves",
                "description": "",
                "tags": [
                    "Sabbatical Leaves"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/search"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/SabbaticalLeave"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            },
            "patch": {
                "summary": "Create Sabbatical Leaves",
                "description": "",
                "tags": [
                    "Sabbatical Leaves"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SabbaticalLeave"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSuccess"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorValidation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorAuthen"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "DefaultResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "detail": {
                                "type": "string"
                            },
                            "title": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "ErrorValidation": {
            "type": "object"
        },
        "ErrorPassport": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "integer"
                },
                "hint": {
                    "type": "string"
                }
            }
        },
        "TokenPassport": {
            "type": "object",
            "properties": {
                "token_type": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer"
                },
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "TokenResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "access_token": {
                            "type": "string"
                        },
                        "token_type": {
                            "type": "string"
                        },
                        "expires_in": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "PayloadLoginRaw": {
            "type": "object",
            "required": [
                "username",
                "password",
                "grant_type",
                "client_id",
                "client_secret"
            ],
            "properties": {
                "username": {
                    "type": "array"
                },
                "password": {
                    "type": "string"
                },
                "grant_type": {
                    "type": "string",
                    "example": "password"
                },
                "client_id": {
                    "type": "integer",
                    "example": 2
                },
                "client_secret": {
                    "type": "string"
                }
            }
        },
        "PayloadRegisterRaw": {
            "type": "object",
            "required": [
                "name",
                "email",
                "password",
                "password_confirmation",
                "birthday",
                "gender",
                "phone",
                "university",
                "department"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "password_confirmation": {
                    "type": "string"
                },
                "birthday": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "university": {
                    "type": "string"
                },
                "department": {
                    "type": "string"
                }
            }
        },
        "PayloadPasswordForgotRequestRaw": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "PayloadPasswordForgotResetRaw": {
            "type": "object",
            "required": [
                "email",
                "token",
                "password",
                "password_confirmation"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "password_confirmation": {
                    "type": "string"
                }
            }
        },
        "PayloadPasswordChangeRaw": {
            "type": "object",
            "required": [
                "current_password",
                "password",
                "password_confirmation"
            ],
            "properties": {
                "current_password": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "password_confirmation": {
                    "type": "string"
                }
            }
        },
        "Users": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "attributes": {
                                "$ref": "#/definitions/UserAttributesRaw"
                            }
                        }
                    }
                }
            }
        },
        "PayloadUpdateUserRaw": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "birthday": {
                    "type": "string"
                },
                "university": {
                    "type": "string"
                },
                "department": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "UserAttributesRaw": {
            "type": "object",
            "properties": {
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "birthday": {
                    "type": "string"
                },
                "university": {
                    "type": "string"
                },
                "department": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "integer",
                    "enum": [
                        "1",
                        "2"
                    ]
                },
                "phone": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "HealthInformationCreate": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer"
                },
                "height": {
                    "type": "string"
                },
                "weight": {
                    "type": "string"
                },
                "blood_group": {
                    "type": "string"
                },
                "diseases": {
                    "type": "string"
                },
                "health_status": {
                    "type": "string"
                },
                "latest_inspection_date": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "BankInformationCreate": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer"
                },
                "account_master": {
                    "type": "string"
                },
                "account_number": {
                    "type": "string"
                },
                "bank_name": {
                    "type": "string"
                },
                "bank_branch": {
                    "type": "string"
                }
            }
        },
        "ContactInformationCreate": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer"
                },
                "house_number": {
                    "type": "string"
                },
                "zalo": {
                    "type": "string"
                },
                "facebook": {
                    "type": "string"
                },
                "contact_person": {
                    "type": "string"
                },
                "relationship_with_staff": {
                    "type": "string"
                },
                "emergency_mobile_number": {
                    "type": "string"
                },
                "emergency_fixed_number": {
                    "type": "string"
                },
                "emergency_address": {
                    "type": "string"
                },
                "permanent_address": {
                    "type": "string"
                },
                "ward": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "domicile": {
                    "type": "string"
                },
                "current_address": {
                    "type": "string"
                }
            }
        },
        "HealthInformation": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "height": {
                                        "type": "string"
                                    },
                                    "weight": {
                                        "type": "string"
                                    },
                                    "blood_group": {
                                        "type": "string"
                                    },
                                    "diseases": {
                                        "type": "string"
                                    },
                                    "health_status": {
                                        "type": "string"
                                    },
                                    "latest_inspection_date": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            },
                            "relationships": {
                                "type": "object",
                                "properties": {
                                    "user": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "included": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object"
                            }
                        }
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "integer"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "per_page": {
                                    "type": "integer"
                                },
                                "current_page": {
                                    "type": "integer"
                                },
                                "total_pages": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "link": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "string"
                        },
                        "first": {
                            "type": "string"
                        },
                        "last": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "BankInformation": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "account_master": {
                                        "type": "string"
                                    },
                                    "account_number": {
                                        "type": "string"
                                    },
                                    "bank_name": {
                                        "type": "string"
                                    },
                                    "bank_branch": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            },
                            "relationships": {
                                "type": "object",
                                "properties": {
                                    "user": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "included": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object"
                            }
                        }
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "integer"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "per_page": {
                                    "type": "integer"
                                },
                                "current_page": {
                                    "type": "integer"
                                },
                                "total_pages": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "link": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "string"
                        },
                        "first": {
                            "type": "string"
                        },
                        "last": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "ContactInformation": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "house_number": {
                                        "type": "string"
                                    },
                                    "zalo": {
                                        "type": "string"
                                    },
                                    "facebook": {
                                        "type": "string"
                                    },
                                    "contact_person": {
                                        "type": "string"
                                    },
                                    "relationship_with_staff": {
                                        "type": "string"
                                    },
                                    "emergency_mobile_number": {
                                        "type": "string"
                                    },
                                    "emergency_fixed_number": {
                                        "type": "string"
                                    },
                                    "emergency_address": {
                                        "type": "string"
                                    },
                                    "permanent_address": {
                                        "type": "string"
                                    },
                                    "ward": {
                                        "type": "string"
                                    },
                                    "city": {
                                        "type": "string"
                                    },
                                    "district": {
                                        "type": "string"
                                    },
                                    "domicile": {
                                        "type": "string"
                                    },
                                    "current_address": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            },
                            "relationships": {
                                "type": "object",
                                "properties": {
                                    "user": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "included": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object"
                            }
                        }
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "integer"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "per_page": {
                                    "type": "integer"
                                },
                                "current_page": {
                                    "type": "integer"
                                },
                                "total_pages": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "link": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "string"
                        },
                        "first": {
                            "type": "string"
                        },
                        "last": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "Educations": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "attributes": {
                                "$ref": "#/definitions/EducationsUpdateRaw"
                            }
                        }
                    }
                }
            }
        },
        "EducationsUpdateRaw": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "delete_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "update_rows": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "level": {
                                "type": "string"
                            },
                            "specialization": {
                                "type": "string"
                            },
                            "certificate_name": {
                                "type": "string"
                            },
                            "certificate_type": {
                                "type": "string"
                            },
                            "training_place": {
                                "type": "string"
                            },
                            "date_of_issue": {
                                "type": "string"
                            },
                            "education_type": {
                                "type": "string"
                            }
                        }
                    }
                },
                "create_rows": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "level": {
                                "type": "string"
                            },
                            "specialization": {
                                "type": "string"
                            },
                            "certificate_name": {
                                "type": "string"
                            },
                            "certificate_type": {
                                "type": "string"
                            },
                            "training_place": {
                                "type": "string"
                            },
                            "date_of_issue": {
                                "type": "string"
                            },
                            "education_type": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "Residual": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "attributes": {
                                "$ref": "#/definitions/ResidualUpdateOrCreatRaw"
                            }
                        }
                    }
                }
            }
        },
        "ResidualUpdateOrCreatRaw": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "delete_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "update_rows": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "start_date": {
                                "type": "string"
                            },
                            "end_date": {
                                "type": "string"
                            },
                            "hours": {
                                "type": "string"
                            },
                            "reason": {
                                "type": "string"
                            }
                        }
                    }
                },
                "create_rows": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "start_date": {
                                "type": "string"
                            },
                            "end_date": {
                                "type": "string"
                            },
                            "hours": {
                                "type": "string"
                            },
                            "reason": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "TimekeepingConfig": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "attributes": {
                                "$ref": "#/definitions/TimekeepingConfigUpdateRaw"
                            }
                        }
                    }
                }
            }
        },
        "TimekeepingConfigUpdateRaw": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "allows_timekeeping": {
                    "type": "string"
                },
                "staff_id_card": {
                    "type": "string"
                },
                "go_late_time_minutes": {
                    "type": "string"
                },
                "go_back_time_minutes": {
                    "type": "string"
                }
            }
        },
        "Kiosk": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "attributes": {
                                "$ref": "#/definitions/KioskUpdateRaw"
                            }
                        }
                    }
                }
            }
        },
        "KioskUpdateRaw": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "store_id": {
                    "type": "string"
                }
            }
        },
        "FingerprintTimekeepers": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "attributes": {
                                "$ref": "#/definitions/FingerprintTimekeepersUpdateRaw"
                            }
                        }
                    }
                }
            }
        },
        "FingerprintTimekeepersUpdateRaw": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "store_id": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                }
            }
        },
        "WorkHistory": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "store_id": {
                                        "type": "integer"
                                    },
                                    "position_id": {
                                        "type": "integer"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            },
                            "relationships": {
                                "type": "object",
                                "properties": {
                                    "Position": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "Store": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "included": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object"
                            }
                        }
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "integer"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "per_page": {
                                    "type": "integer"
                                },
                                "current_page": {
                                    "type": "integer"
                                },
                                "total_pages": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "link": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "string"
                        },
                        "first": {
                            "type": "string"
                        },
                        "last": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "WorkHistoryUpdateRaw": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer"
                },
                "delete_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "update_rows": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "store_id": {
                                "type": "integer"
                            },
                            "position_id": {
                                "type": "integer"
                            },
                            "start_date": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "end_date": {
                                "type": "string",
                                "format": "date-time"
                            }
                        }
                    }
                },
                "create_rows": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "store_id": {
                                "type": "integer"
                            },
                            "position_id": {
                                "type": "integer"
                            },
                            "start_date": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "end_date": {
                                "type": "string",
                                "format": "date-time"
                            }
                        }
                    }
                }
            }
        },
        "Position": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "integer"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "per_page": {
                                    "type": "integer"
                                },
                                "current_page": {
                                    "type": "integer"
                                },
                                "total_pages": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "link": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "string"
                        },
                        "first": {
                            "type": "string"
                        },
                        "last": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "WorkForm": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "integer"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "per_page": {
                                    "type": "integer"
                                },
                                "current_page": {
                                    "type": "integer"
                                },
                                "total_pages": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "link": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "string"
                        },
                        "first": {
                            "type": "string"
                        },
                        "last": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "Insurrance": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "identification_number": {
                                        "type": "string"
                                    },
                                    "insurrance_number": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            },
                            "relationships": {
                                "type": "object",
                                "properties": {
                                    "user": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "included": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object"
                            }
                        }
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "integer"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "per_page": {
                                    "type": "integer"
                                },
                                "current_page": {
                                    "type": "integer"
                                },
                                "total_pages": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "link": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "string"
                        },
                        "first": {
                            "type": "string"
                        },
                        "last": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "LabourContract": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "contract_number": {
                                        "type": "string"
                                    },
                                    "contract_category": {
                                        "type": "string"
                                    },
                                    "sign_date": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "expiration_date": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            },
                            "relationships": {
                                "type": "object",
                                "properties": {
                                    "user": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "included": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object"
                            }
                        }
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "integer"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "per_page": {
                                    "type": "integer"
                                },
                                "current_page": {
                                    "type": "integer"
                                },
                                "total_pages": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "link": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "string"
                        },
                        "first": {
                            "type": "string"
                        },
                        "last": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "SuggestReason": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "suggest_category_id": {
                                        "type": "integer"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "integer"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "per_page": {
                                    "type": "integer"
                                },
                                "current_page": {
                                    "type": "integer"
                                },
                                "total_pages": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "link": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "string"
                        },
                        "first": {
                            "type": "string"
                        },
                        "last": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "Suggest": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "user_create": {
                                        "type": "integer"
                                    },
                                    "user_approve": {
                                        "type": "integer"
                                    },
                                    "suggest_category_id": {
                                        "type": "integer"
                                    },
                                    "store_id": {
                                        "type": "integer"
                                    },
                                    "approved_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            },
                            "relationships": {
                                "type": "object"
                            }
                        }
                    }
                },
                "included": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object"
                            }
                        }
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "integer"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "per_page": {
                                    "type": "integer"
                                },
                                "current_page": {
                                    "type": "integer"
                                },
                                "total_pages": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "link": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "string"
                        },
                        "first": {
                            "type": "string"
                        },
                        "last": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "SuggestCategory": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "suggest_type": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "integer"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "per_page": {
                                    "type": "integer"
                                },
                                "current_page": {
                                    "type": "integer"
                                },
                                "total_pages": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "link": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "string"
                        },
                        "first": {
                            "type": "string"
                        },
                        "last": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "City": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "integer"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "per_page": {
                                    "type": "integer"
                                },
                                "current_page": {
                                    "type": "integer"
                                },
                                "total_pages": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "link": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "string"
                        },
                        "first": {
                            "type": "string"
                        },
                        "last": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "Division": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            },
                            "relationships": {
                                "type": "object",
                                "properties": {
                                    "position": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "included": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object"
                            }
                        }
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "integer"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "per_page": {
                                    "type": "integer"
                                },
                                "current_page": {
                                    "type": "integer"
                                },
                                "total_pages": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "link": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "string"
                        },
                        "first": {
                            "type": "string"
                        },
                        "last": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "PositionDetail": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "update_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        }
                    }
                }
            }
        },
        "WorkFormDetail": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "update_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        }
                    }
                }
            }
        },
        "InsurranceDetail": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "user_id": {
                                    "type": "integer"
                                },
                                "identification_number": {
                                    "type": "string"
                                },
                                "insurrance_number": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "update_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        }
                    }
                }
            }
        },
        "LabourContractDetail": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "user_id": {
                                    "type": "integer"
                                },
                                "contract_number": {
                                    "type": "string"
                                },
                                "contract_category": {
                                    "type": "string"
                                },
                                "sign_date": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "expiration_date": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "status": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "update_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        }
                    }
                }
            }
        },
        "SuggestDetail": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "user_create": {
                                    "type": "integer"
                                },
                                "user_approve": {
                                    "type": "integer"
                                },
                                "suggest_category_id": {
                                    "type": "integer"
                                },
                                "store_id": {
                                    "type": "integer"
                                },
                                "approved_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "status": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "update_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        }
                    }
                }
            }
        },
        "SuggestReasonDetail": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "suggest_category_id": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "update_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        }
                    }
                }
            }
        },
        "SuggestCategoryDetail": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "update_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        }
                    }
                }
            }
        },
        "CityDetail": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "update_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        }
                    }
                }
            }
        },
        "CreatePosition": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "CreateLabourContract": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "user_id": {
                    "type": "integer"
                },
                "contract_number": {
                    "type": "string"
                },
                "contract_category": {
                    "type": "string"
                },
                "sign_date": {
                    "type": "string",
                    "format": "date-time"
                },
                "expiration_date": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "CreateInsurrance": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "user_id": {
                    "type": "integer"
                },
                "identification_number": {
                    "type": "string"
                },
                "insurrance_number": {
                    "type": "string"
                }
            }
        },
        "CreateWorkForm": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "CreateRankPositionInformation": {
            "type": "object",
            "required": [
                "user_id",
                "store_id",
                "position_id",
                "division_id",
                "work_form_id"
            ],
            "properties": {
                "user_id": {
                    "type": "integer"
                },
                "store_id": {
                    "type": "integer"
                },
                "position_id": {
                    "type": "integer"
                },
                "division_id": {
                    "type": "integer"
                },
                "work_form_id": {
                    "type": "integer"
                }
            }
        },
        "CreateCity": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "CreateSuggestCategory": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "CreateSuggest": {
            "type": "object",
            "required": [],
            "properties": {
                "suggest_reason_id": {
                    "type": "integer"
                },
                "suggest_category_id": {
                    "type": "integer"
                },
                "store_id": {
                    "type": "integer"
                },
                "data": {
                    "type": "array"
                },
                "suggest_type": {
                    "type": "string"
                }
            }
        },
        "CreateSuggestReason": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "CreateDivision": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "position_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "RankPositionInformation": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string"
                                    },
                                    "store_id": {
                                        "type": "string"
                                    },
                                    "position_id": {
                                        "type": "string"
                                    },
                                    "division_id": {
                                        "type": "string"
                                    },
                                    "work_form_id": {
                                        "type": "integer"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            },
                            "relationships": {
                                "type": "object",
                                "properties": {
                                    "store": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "position": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "division": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "workForm": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "included": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object"
                            }
                        }
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "integer"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "per_page": {
                                    "type": "integer"
                                },
                                "current_page": {
                                    "type": "integer"
                                },
                                "total_pages": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "link": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "string"
                        },
                        "first": {
                            "type": "string"
                        },
                        "last": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "Store": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "city_id": {
                                        "type": "integer"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            },
                            "relationships": {
                                "type": "object",
                                "properties": {
                                    "city": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "included": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "integer"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "per_page": {
                                    "type": "integer"
                                },
                                "current_page": {
                                    "type": "integer"
                                },
                                "total_pages": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "link": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "string"
                        },
                        "first": {
                            "type": "string"
                        },
                        "last": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "CreateStore": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "city_id": {
                    "type": "integer"
                }
            }
        },
        "DivisionDetail": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "update_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        },
                        "relationships": {
                            "type": "object",
                            "properties": {
                                "position": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "included": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        },
        "StoreDetail": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "city_id": {
                                    "type": "integer"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "update_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        },
                        "relationships": {
                            "type": "object",
                            "properties": {
                                "city": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "included": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "ScheduleDetail": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "user_create": {
                                    "type": "object"
                                },
                                "user_approve": {
                                    "type": "integer"
                                },
                                "day_start": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "day_end": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "status": {
                                    "type": "string"
                                },
                                "store_id": {
                                    "type": "integer"
                                },
                                "origin_id": {
                                    "type": "integer"
                                },
                                "approved_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "update_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        },
                        "relationships": {
                            "type": "object",
                            "properties": {
                                "scheduleDetail": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "included": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "Role": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "guard_name": {
                                        "type": "string"
                                    },
                                    "store_id": {
                                        "type": "integer"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            },
                            "relationships": {
                                "type": "object",
                                "properties": {
                                    "permission": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "store": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "included": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "integer"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "per_page": {
                                    "type": "integer"
                                },
                                "current_page": {
                                    "type": "integer"
                                },
                                "total_pages": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "link": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "string"
                        },
                        "first": {
                            "type": "string"
                        },
                        "last": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "CreateRole": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "store_id": {
                    "type": "integer"
                },
                "permission": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "RoleDetail": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "city_id": {
                                    "type": "integer"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "update_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        },
                        "relationships": {
                            "type": "object",
                            "properties": {
                                "permission": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "store": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "included": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "Permission": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "guard_name": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "integer"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "per_page": {
                                    "type": "integer"
                                },
                                "current_page": {
                                    "type": "integer"
                                },
                                "total_pages": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "link": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "string"
                        },
                        "first": {
                            "type": "string"
                        },
                        "last": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "CreatePermission": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "PermissionDetail": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "guard_name": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "update_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        }
                    }
                }
            }
        },
        "Shift": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "shift_code": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "time_start": {
                                        "type": "string"
                                    },
                                    "time_end": {
                                        "type": "string"
                                    },
                                    "store_id": {
                                        "type": "integer"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            },
                            "relationships": {
                                "type": "object",
                                "properties": {
                                    "shiftDetail": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "included": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object"
                            }
                        }
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "integer"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "per_page": {
                                    "type": "integer"
                                },
                                "current_page": {
                                    "type": "integer"
                                },
                                "total_pages": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "link": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "string"
                        },
                        "first": {
                            "type": "string"
                        },
                        "last": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "ScheduleDetailUser": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "full_name": {
                                        "type": "string"
                                    },
                                    "birthday": {
                                        "type": "string"
                                    },
                                    "gender": {
                                        "type": "string"
                                    },
                                    "id_card": {
                                        "type": "string"
                                    },
                                    "place_of_issue_id_card": {
                                        "type": "string"
                                    },
                                    "nation": {
                                        "type": "string"
                                    },
                                    "religion": {
                                        "type": "string"
                                    },
                                    "pivotScheduleDetail": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "shift_code": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string"
                                                },
                                                "work_date": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "shift_id": {
                                                    "type": "integer"
                                                },
                                                "time": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "time_start": {
                                                                "type": "string"
                                                            },
                                                            "time_end": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "notApprovalScheduleDetail": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "shift_code": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string"
                                                },
                                                "work_date": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "shift_id": {
                                                    "type": "integer"
                                                },
                                                "time": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "time_start": {
                                                                "type": "string"
                                                            },
                                                            "time_end": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "marriage_status": {
                                        "type": "string"
                                    },
                                    "date_of_issue_id_card": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            },
                            "relationships": {
                                "type": "object",
                                "properties": {
                                    "scheduleDetail": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "included": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object"
                            }
                        }
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "edit": {
                            "type": "boolean"
                        },
                        "pagination": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "integer"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "per_page": {
                                    "type": "integer"
                                },
                                "current_page": {
                                    "type": "integer"
                                },
                                "total_pages": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "link": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "string"
                        },
                        "first": {
                            "type": "string"
                        },
                        "last": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "ScheduleApprovel": {
            "type": "object",
            "required": [
                "approve"
            ],
            "properties": {
                "approve": {
                    "type": "boolean"
                },
                "schedules_id": {
                    "type": "integer"
                }
            }
        },
        "CreateShift": {
            "type": "object",
            "required": [
                "shift_code",
                "time",
                "store_id"
            ],
            "properties": {
                "shift_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "time": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "time_start": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "time_end": {
                                "type": "string",
                                "format": "date-time"
                            }
                        }
                    }
                },
                "store_id": {
                    "type": "integer"
                }
            }
        },
        "ActiveShift": {
            "type": "object",
            "required": [
                "shift_id",
                "shift_code",
                "store_id",
                "status"
            ],
            "properties": {
                "shift_code": {
                    "type": "string"
                },
                "shift_id": {
                    "type": "string"
                },
                "store_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "UpdateShift": {
            "type": "object",
            "required": [
                "shift_id"
            ],
            "properties": {
                "shift_code": {
                    "type": "string"
                },
                "shift_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "time": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "time_start": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "time_end": {
                                "type": "string",
                                "format": "date-time"
                            }
                        }
                    }
                },
                "store_id": {
                    "type": "integer"
                }
            }
        },
        "DeleteShift": {
            "type": "object",
            "required": [
                "shift_id"
            ],
            "properties": {
                "shift_id": {
                    "type": "string"
                }
            }
        },
        "UpdateSchedule": {
            "type": "array",
            "items": {
                "properties": {
                    "work_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "add": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "user_id": {
                                    "type": "integer"
                                },
                                "shift_id": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "edit": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "user_id": {
                                    "type": "integer"
                                },
                                "old_shift_id": {
                                    "type": "integer"
                                },
                                "new_shift_id": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "delete": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "user_id": {
                                    "type": "integer"
                                },
                                "shift_id": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "AddScheduleDetailUser": {
            "type": "object",
            "required": [
                "shift_id",
                "user_id",
                "work_date",
                "start_date",
                "end_date"
            ],
            "properties": {
                "shift_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "work_date": {
                    "type": "string",
                    "format": "date-time"
                },
                "start_date": {
                    "type": "string",
                    "format": "date-time"
                },
                "end_date": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "RemoveUserSchedulesDetail": {
            "type": "object",
            "required": [
                "name",
                "time_start",
                "time_end",
                "store_id"
            ],
            "properties": {
                "shift_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                },
                "work_date": {
                    "type": "string",
                    "format": "date-time"
                },
                "schedules_id": {
                    "type": "integer"
                }
            }
        },
        "WorkShiftDetail": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "shift_code": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "time_start": {
                                    "type": "string"
                                },
                                "time_end": {
                                    "type": "string"
                                },
                                "store_id": {
                                    "type": "integer"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "update_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        },
                        "relationships": {
                            "type": "object",
                            "properties": {
                                "store": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "included": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "city_id": {
                                        "type": "integer"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "Schedule": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "user_create": {
                                        "type": "object"
                                    },
                                    "user_approve": {
                                        "type": "integer"
                                    },
                                    "day_start": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "day_end": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "store_id": {
                                        "type": "integer"
                                    },
                                    "origin_id": {
                                        "type": "integer"
                                    },
                                    "approved_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            },
                            "relationships": {
                                "type": "object",
                                "properties": {
                                    "scheduleDetail": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "included": {
                    "type": "array",
                    "items (copy)": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object"
                            }
                        }
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "integer"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "per_page": {
                                    "type": "integer"
                                },
                                "current_page": {
                                    "type": "integer"
                                },
                                "total_pages": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "link": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "string"
                        },
                        "first": {
                            "type": "string"
                        },
                        "last": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "Timekeeping": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "attributes": {
                                "$ref": "#/definitions/TimekeepingAttributesRaw"
                            }
                        }
                    }
                }
            }
        },
        "TimekeepingAttributesRaw": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "device_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "attended_at": {
                    "type": "string"
                },
                "tracking_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "TimekeepingCreateRaw": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "device_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "attended_at": {
                    "type": "string"
                },
                "tracking_type": {
                    "type": "string"
                }
            }
        },
        "Decision": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "number_notify": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "integer"
                                    },
                                    "categoty": {
                                        "type": "integer"
                                    },
                                    "content": {
                                        "type": "integer"
                                    },
                                    "status": {
                                        "type": "integer"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "update_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            },
                            "relationships": {
                                "type": "object",
                                "properties": {
                                    "DecisionDetail": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "included": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object"
                            }
                        }
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "integer"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "per_page": {
                                    "type": "integer"
                                },
                                "current_page": {
                                    "type": "integer"
                                },
                                "total_pages": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "link": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "string"
                        },
                        "first": {
                            "type": "string"
                        },
                        "last": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "CreateDecision": {
            "type": "object",
            "required": [
                "name",
                "number_notify",
                "store",
                "categoty",
                "content"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "number_notify": {
                    "type": "string"
                },
                "categoty": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "store": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "store_id": {
                                "type": "integer"
                            },
                            "role_id": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "DecisionDetail": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "number_notify": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "integer"
                                },
                                "categoty": {
                                    "type": "integer"
                                },
                                "content": {
                                    "type": "integer"
                                },
                                "status": {
                                    "type": "integer"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "update_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        },
                        "relationships": {
                            "type": "object",
                            "properties": {
                                "DecisionDetail": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "included": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        },
        "CreateSuccess": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "ErrorNotFound": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "detail": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "ErrorAuthen": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "detail": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "AbsentType": {
            "type": "object",
            "required": [
                "name",
                "status"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "AbsentReason": {
            "type": "object",
            "required": [
                "name",
                "absent_type_id"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "absent_type_id": {
                    "type": "integer"
                }
            }
        },
        "Absent": {
            "type": "object",
            "required": [
                "absent_type_id",
                "absent_reason_id",
                "user_id",
                "store_id",
                "start_date",
                "end_date"
            ],
            "properties": {
                "absent_type_id": {
                    "type": "integer"
                },
                "absent_reason_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                },
                "store_id": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                }
            }
        },
        "FaultTypes": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "FaultContent": {
            "type": "object"
        },
        "CreateFaultType": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "UpdateFaultType": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "CreateFaultContent": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "UpdateFaultContent": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "Faults": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "CreateFault": {
            "type": "object",
            "properties": {
                "fault_content_id": {
                    "type": "integer"
                },
                "fault_type_id": {
                    "type": "integer"
                },
                "store_id": {
                    "type": "integer"
                },
                "time_takes_place": {
                    "type": "date-time"
                },
                "staff": {
                    "required": true,
                    "type": "integer"
                },
                "leader": {
                    "required": false,
                    "type": "integer"
                }
            }
        },
        "UpdateFault": {
            "type": "object",
            "properties": {
                "fault_content_id": {
                    "type": "integer"
                },
                "fault_type_id": {
                    "type": "integer"
                },
                "store_id": {
                    "type": "integer"
                },
                "time_takes_place": {
                    "type": "date-time"
                },
                "staff": {
                    "required": true,
                    "type": "integer"
                },
                "leader": {
                    "required": false,
                    "type": "integer"
                }
            }
        },
        "AdditionalTimeCreate": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "start_date": {
                                "type": "string"
                            },
                            "end_date": {
                                "type": "string"
                            },
                            "hours": {
                                "type": "string"
                            },
                            "reason": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "AdditionalTimeUpdate": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "delete_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "update_rows": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "start_date": {
                                "type": "string"
                            },
                            "end_date": {
                                "type": "string"
                            },
                            "hours": {
                                "type": "string"
                            },
                            "reason": {
                                "type": "string"
                            }
                        }
                    }
                },
                "create_rows": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "start_date": {
                                "type": "string"
                            },
                            "end_date": {
                                "type": "string"
                            },
                            "hours": {
                                "type": "string"
                            },
                            "reason": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "SubtractionTimeCreate": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "start_date": {
                                "type": "string"
                            },
                            "end_date": {
                                "type": "string"
                            },
                            "hours": {
                                "type": "string"
                            },
                            "reason": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "SubtractionTimeUpdate": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer"
                },
                "delete_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "update_rows": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "start_date": {
                                "type": "string"
                            },
                            "end_date": {
                                "type": "string"
                            },
                            "hours": {
                                "type": "string"
                            },
                            "reason": {
                                "type": "string"
                            }
                        }
                    }
                },
                "create_rows": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "start_date": {
                                "type": "string"
                            },
                            "end_date": {
                                "type": "string"
                            },
                            "hours": {
                                "type": "string"
                            },
                            "reason": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "SabbaticalLeave": {
            "type": "object",
            "required": [
                "user_id",
                "annual_leave",
                "days_off_month"
            ],
            "properties": {
                "user_id": {
                    "type": "integer"
                },
                "annual_leave": {
                    "type": "integer"
                },
                "days_off_month": {
                    "type": "integer"
                }
            }
        }
    },
    "parameters": {
        "user_id": {
            "name": "user_id",
            "description": "User ID",
            "in": "query",
            "required": true,
            "type": "integer"
        },
        "id": {
            "name": "id",
            "description": "ID",
            "in": "path",
            "required": true,
            "type": "integer"
        },
        "limit": {
            "name": "limit",
            "description": "Amount of item in per page.\nUse limit = 0 in order to get all items.",
            "in": "query",
            "required": false,
            "type": "integer",
            "example": 15
        },
        "page": {
            "name": "page",
            "description": "Page",
            "in": "query",
            "required": false,
            "type": "integer",
            "example": 1
        },
        "search": {
            "name": "search",
            "description": "Searched value.\nExample: 'lorem', 'name:John;email:john@gmail.com'",
            "in": "query",
            "required": false,
            "type": "string"
        },
        "searchFields": {
            "name": "searchFields",
            "description": "Fields in which research should be carried out\nExample: 'name;email', 'name:like;email:='",
            "in": "query",
            "required": false,
            "type": "string"
        },
        "filter": {
            "name": "filter",
            "description": "Fields that must be returned to the response object\nExample: id;name",
            "in": "query",
            "required": false,
            "type": "string"
        },
        "orderBy": {
            "name": "orderBy",
            "description": "Order By\nExample: id, duration, created_at",
            "in": "query",
            "required": false,
            "type": "string"
        },
        "orderByRaw": {
            "name": "orderByRaw",
            "description": "Order By Raw\nExample: skip",
            "in": "query",
            "required": false,
            "type": "string"
        },
        "sortedBy": {
            "name": "sortedBy",
            "description": "Sort type\nExample: asc or desc",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
                "asc",
                "desc"
            ]
        },
        "with": {
            "name": "with",
            "description": "Add relationship\nExample: roles",
            "in": "query",
            "required": false,
            "type": "string"
        },
        "include": {
            "name": "include",
            "description": "Include relationship.",
            "in": "query",
            "required": false,
            "type": "string"
        },
        "searchJoin": {
            "name": "searchJoin",
            "description": "Specifies the search method (AND / OR), by default the application searches each parameter with OR.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
                "or",
                "and"
            ]
        },
        "idLast": {
            "name": "id_last",
            "description": "Specifies the last id in previous request",
            "in": "query",
            "required": false,
            "type": "integer"
        },
        "typeEducations": {
            "name": "type",
            "description": "Specifies the type CHUNG_CHI_CHUYEN_NGHANH, TRINH_DO_CHUYEN_MON",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
                "CHUNG_CHI_CHUYEN_NGHANH",
                "TRINH_DO_CHUYEN_MON"
            ]
        },
        "start_date": {
            "name": "start_date",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string"
        },
        "end_date": {
            "name": "end_date",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string"
        },
        "store_id": {
            "name": "store_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
        }
    },
    "securityDefinitions": {
        "JWT": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "description": "Enter your token..."
        }
    }
}